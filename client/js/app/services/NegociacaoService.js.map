{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","all","obterNegociacoesSemana","obterNegociacoesSemanaAnterior","obterNegociacoesSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","map","Negociacao","Date","dado","data","quantidade","valor","catch","Error","erro","get","objeto","console","log","error","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"./HttpService\";\nimport { ConnectionFactory } from \"./ConnectionFactory\";\nimport { NegociacaoDao } from \"../dao/NegociacaoDao\";\nimport { Negociacao } from \"../models/Negociacao\";\n\nexport class NegociacaoService {\n  constructor() {\n    this._http = new HttpService();\n  }\n\n  obterNegociacoes() {\n    return Promise.all([\n      this.obterNegociacoesSemana(),\n      this.obterNegociacoesSemanaAnterior(),\n      this.obterNegociacoesSemanaRetrasada()\n    ])\n      .then(periodos => {\n        let negociacoes = periodos\n          .reduce((dados, periodo) => dados.concat(periodo), [])\n          .map(\n            dado =>\n              new Negociacao(new Date(dado.data), dado.quantidade, dado.valor)\n          );\n\n        return negociacoes;\n      })\n      .catch(erro => {\n        throw new Error(erro);\n      });\n  }\n\n  obterNegociacoesSemana() {\n    return this._http\n      .get(\"negociacoes/semana\")\n      .then(negociacoes => {\n        return negociacoes.map(\n          objeto =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n      })\n      .catch(error => {\n        console.log(error);\n        throw new Error(\"Não foi possível obter as negociacoes da semana\");\n      });\n  }\n\n  obterNegociacoesSemanaAnterior() {\n    return this._http\n      .get(\"negociacoes/anterior\")\n      .then(negociacoes => {\n        return negociacoes.map(\n          objeto =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n      })\n      .catch(error => {\n        console.log(error);\n        throw new Error(\n          \"Não foi possível obter as negociacoes da semana anterior\"\n        );\n      });\n  }\n\n  obterNegociacoesSemanaRetrasada() {\n    return this._http\n      .get(\"negociacoes/retrasada\")\n      .then(negociacoes => {\n        return negociacoes.map(\n          objeto =>\n            new Negociacao(\n              new Date(objeto.data),\n              objeto.quantidade,\n              objeto.valor\n            )\n        );\n      })\n      .catch(error => {\n        console.log(error);\n        throw new Error(\n          \"Não foi possível obter as negociacoes da semana retrasada\"\n        );\n      });\n  }\n\n  cadastra(negociacao) {\n    return ConnectionFactory.getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.adiciona(negociacao))\n      .then(() => \"Negociação adicionada com sucesso\")\n      .catch(() => {\n        console.log(error);\n        throw new Error(\"Não foi possível adicionar negociação\");\n      });\n  }\n\n  lista() {\n    return ConnectionFactory.getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.listaTodos())\n      .catch(error => {\n        console.log(error);\n        throw new Error(\"Não foi possível adicionar negociação\");\n      });\n  }\n\n  apaga() {\n    return ConnectionFactory.getConnection()\n      .then(connection => new NegociacaoDao(connection))\n      .then(dao => dao.apagaTodos())\n      .then(() => \"Negociações apagadas com sucesso\")\n      .catch(error => {\n        console.log(error);\n        throw new Error(\"Não foi possível apagar negociações\");\n      });\n  }\n\n  importa(listaAtual) {\n    return this.obterNegociacoes()\n      .then(negociacoes =>\n        negociacoes.filter(\n          negociacao =>\n            !listaAtual.some(\n              negociacaoExistente =>\n                JSON.stringify(negociacao) ==\n                JSON.stringify(negociacaoExistente)\n            )\n        )\n      )\n      .catch(error => {\n        console.log(error);\n        throw new Error(\"Não foi possível importar negociações\");\n      });\n  }\n}\n"]}