{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","status","text","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;IAAaA,W,WAAAA,W;;;;;;;kCACGC,G,EAAK;AACjB,UAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,MAAJ,CAAWC,IAArB,CAAN;AACb,aAAOJ,GAAP;AACD;;;wBAEGK,G,EAAK;AAAA;;AACP,aAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,eAAO,MAAKC,aAAL,CAAmBR,GAAnB,CAAP;AAAA,OADD,EAEJO,IAFI,CAEC;AAAA,eAAOP,IAAIS,IAAJ,EAAP;AAAA,OAFD,CAAP;AAGD;;;yBAEIJ,G,EAAKK,I,EAAM;AAAA;;AACd,aAAOJ,MAAMD,GAAN,EAAW;AAChBM,iBAAS,EAAE,gBAAgB,kBAAlB,EADO;AAEhBC,gBAAQ,MAFQ;AAGhBC,cAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,OAAX,EAIJH,IAJI,CAIC;AAAA,eAAO,OAAKC,aAAL,CAAmBR,GAAnB,CAAP;AAAA,OAJD,CAAP;AAKD","file":"HttpService.js","sourcesContent":["export class HttpService {\n  _handleErrors(res) {\n    if (!res.ok) throw new Error(res.status.text);\n    return res;\n  }\n\n  get(url) {\n    return fetch(url)\n      .then(res => this._handleErrors(res))\n      .then(res => res.json());\n  }\n\n  post(url, dado) {\n    return fetch(url, {\n      headers: { \"Content-type\": \"application/json\" },\n      method: \"post\",\n      body: JSON.stringify(dado)\n    }).then(res => this._handleErrors(res));\n  }\n}\n"]}