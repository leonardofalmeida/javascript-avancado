{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","response","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;;;;AAAA;;;;IAEaA,a,WAAAA,a;AACX,yBAAYC,UAAZ,EAAwB;AAAA;;AACtB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,MAAL,GAAc,aAAd;AACD;;;;6BAEQC,U,EAAY;AAAA;;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAEc;AAFd,SAGXQ,GAHW,CAGPP,UAHO,CAAd,CADsC,CAIlB;;AAEpBI,gBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,SAFD;;AAIAE,gBAAQK,OAAR,GAAkB,aAAK;AACrBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,6BAAP;AACD,SAHD;AAID,OAdM,CAAP;AAeD;;;iCAEY;AAAA;;AACX,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIY,WAAW,OAAKjB,WAAL,CACZO,WADY,CACA,CAAC,OAAKN,MAAN,CADA,EACe,WADf,EAEZO,WAFY,CAEA,OAAKP,MAFL,EAGZiB,UAHY,EAAf,CADsC,CAIrB;;AAEjB,YAAIC,cAAc,EAAlB;;AAEAF,iBAASP,SAAT,GAAqB,aAAK;AACxB,cAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB,CADwB,CACK;;AAE7B;AACA,cAAID,KAAJ,EAAW;AACT,gBAAIE,OAAOF,MAAMG,KAAjB,CADS,CACe;AACxBJ,wBAAYK,IAAZ,CACE,IAAIC,sBAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CADF;;AAIAR,kBAAMS,QAAN,GANS,CAMS;AACnB,WAPD,MAOO;AACLzB,oBAAQe,WAAR;AACD;AACF,SAdD;;AAgBAF,iBAASN,OAAT,GAAmB,aAAK;AACtBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAec,IAA3B;AACAzB,iBAAO,wCAAP;AACD,SAHD;AAID,OA5BM,CAAP;AA6BD;;;iCAEY;AAAA;;AACX,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGX8B,KAHW,EAAd,CADsC,CAI1B;;AAEZzB,gBAAQI,SAAR,GAAoB,aAAK;AACvBN,kBAAQ,oCAAR;AACD,SAFD;;AAIAE,gBAAQK,OAAR,GAAkB,aAAK;AACrBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,yCAAP;AACD,SAHD;AAID,OAdM,CAAP;AAeD","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from \"../models/Negociacao\";\n\nexport class NegociacaoDao {\n  constructor(connection) {\n    this._connection = connection;\n    this._store = \"negociacoes\";\n  }\n\n  adiciona(negociacao) {\n    return new Promise((resolve, reject) => {\n      let request = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store) // obtém o object store\n        .add(negociacao); // manda a requisição\n\n      request.onsuccess = e => {\n        resolve();\n      };\n\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject(\"Nao foi possível adicionar.\");\n      };\n    });\n  }\n\n  listaTodos() {\n    return new Promise((resolve, reject) => {\n      let response = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .openCursor(); //cria o ponteiro para as negociações\n\n      let negociacoes = [];\n\n      response.onsuccess = e => {\n        let atual = e.target.result; // é um PONTEIRO\n\n        // Se existe negociações para serem lidas\n        if (atual) {\n          let dado = atual.value; // é um json\n          negociacoes.push(\n            new Negociacao(dado._data, dado._quantidade, dado._valor)\n          );\n\n          atual.continue(); // ponteiro aponta para próxima negociação\n        } else {\n          resolve(negociacoes);\n        }\n      };\n\n      response.onerror = e => {\n        console.log(e.target.error.name);\n        reject(\"Não foi possível listar as negociações\");\n      };\n    });\n  }\n\n  apagaTodos() {\n    return new Promise((resolve, reject) => {\n      let request = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .clear(); //cria o ponteiro para as negociações\n\n      request.onsuccess = e => {\n        resolve(\"Negociações removidas com sucesso.\");\n      };\n\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject(\"Nao foi possível apagar as negociações.\");\n      };\n    });\n  }\n}\n"]}