{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","response","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,gB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;+BAEIC,a;AACX,+BAAYC,UAAZ,EAAwB;AAAA;;AACtB,eAAKC,WAAL,GAAmBD,UAAnB;AACA,eAAKE,MAAL,GAAc,aAAd;AACD;;;;mCAEQC,U,EAAY;AAAA;;AACnB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAEc;AAFd,eAGXQ,GAHW,CAGPP,UAHO,CAAd,CADsC,CAIlB;;AAEpBI,sBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,eAFD;;AAIAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,6BAAP;AACD,eAHD;AAID,aAdM,CAAP;AAeD;;;uCAEY;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIY,WAAW,OAAKjB,WAAL,CACZO,WADY,CACA,CAAC,OAAKN,MAAN,CADA,EACe,WADf,EAEZO,WAFY,CAEA,OAAKP,MAFL,EAGZiB,UAHY,EAAf,CADsC,CAIrB;;AAEjB,kBAAIC,cAAc,EAAlB;;AAEAF,uBAASP,SAAT,GAAqB,aAAK;AACxB,oBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB,CADwB,CACK;;AAE7B;AACA,oBAAID,KAAJ,EAAW;AACT,sBAAIE,OAAOF,MAAMG,KAAjB,CADS,CACe;AACxBJ,8BAAYK,IAAZ,CACE,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CADF;;AAIAP,wBAAMQ,QAAN,GANS,CAMS;AACnB,iBAPD,MAOO;AACLxB,0BAAQe,WAAR;AACD;AACF,eAdD;;AAgBAF,uBAASN,OAAT,GAAmB,aAAK;AACtBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAea,IAA3B;AACAxB,uBAAO,wCAAP;AACD,eAHD;AAID,aA5BM,CAAP;AA6BD;;;uCAEY;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGX6B,KAHW,EAAd,CADsC,CAI1B;;AAEZxB,sBAAQI,SAAR,GAAoB,aAAK;AACvBN,wBAAQ,oCAAR;AACD,eAFD;;AAIAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,yCAAP;AACD,eAHD;AAID,aAdM,CAAP;AAeD","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from \"../models/Negociacao\";\n\nexport class NegociacaoDao {\n  constructor(connection) {\n    this._connection = connection;\n    this._store = \"negociacoes\";\n  }\n\n  adiciona(negociacao) {\n    return new Promise((resolve, reject) => {\n      let request = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store) // obtém o object store\n        .add(negociacao); // manda a requisição\n\n      request.onsuccess = e => {\n        resolve();\n      };\n\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject(\"Nao foi possível adicionar.\");\n      };\n    });\n  }\n\n  listaTodos() {\n    return new Promise((resolve, reject) => {\n      let response = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .openCursor(); //cria o ponteiro para as negociações\n\n      let negociacoes = [];\n\n      response.onsuccess = e => {\n        let atual = e.target.result; // é um PONTEIRO\n\n        // Se existe negociações para serem lidas\n        if (atual) {\n          let dado = atual.value; // é um json\n          negociacoes.push(\n            new Negociacao(dado._data, dado._quantidade, dado._valor)\n          );\n\n          atual.continue(); // ponteiro aponta para próxima negociação\n        } else {\n          resolve(negociacoes);\n        }\n      };\n\n      response.onerror = e => {\n        console.log(e.target.error.name);\n        reject(\"Não foi possível listar as negociações\");\n      };\n    });\n  }\n\n  apagaTodos() {\n    return new Promise((resolve, reject) => {\n      let request = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .clear(); //cria o ponteiro para as negociações\n\n      request.onsuccess = e => {\n        resolve(\"Negociações removidas com sucesso.\");\n      };\n\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject(\"Nao foi possível apagar as negociações.\");\n      };\n    });\n  }\n}\n"]}